# This action will perform a test using chrome's lighthouse against static
# websites, ensuring minimum scores are met.
#
name: Lighthouse Accessibility / SEO check
on: [pull_request]

env:
  NODE_VERSION: '10.x'
  NODE_ENV: production
  BUILD_COMMAND: npm run build
  BUILD_DIR: dist
  URLS: http://localhost:8000, http://localhost:8000/whatever

jobs:
  lighthouse-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache node_modules
        id: cache-primes
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install & build
        run: |
          npm install
          ${{ env.BUILD_COMMAND }}
      - name: Start web server
        run: |
          cd ${{ env.BUILD_DIR }}
          npx local-web-server &
      - name: Run Lighthouse
        uses: foo-software/lighthouse-check-action@master
        id: lighthouseCheck
        with:
          # Uncomment the line below to have the workflow report via PR comments.
          # accessToken: ${{ secrets.GITHUB_TOKEN }}
          # You can put several URLs (in fact it's a good idea) separating them by commas.
          urls: ${{ env.URLS }}
      - name: Handle Lighthouse Check results
        uses: foo-software/lighthouse-check-status-action@master
        with:
          lighthouseCheckResults: ${{ steps.lighthouseCheck.outputs.lighthouseCheckResults }}
          minAccessibilityScore: '95'
          minBestPracticesScore: '85'
          minSeoScore: '90'
          # minProgressiveWebAppScore: "50"
          # The following check is not advised as performance varies greatly between runs.
          # minPerformanceScore: "50"
